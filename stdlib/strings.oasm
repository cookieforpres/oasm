strings_equal:
    cast r0, u32
    cast r1, u32
    cast r2, u32
    cast r3, u32
    cmp r1, r3
    jne strings_equal_false
    mov r4, r1
    add r0, r0, r1
    add r2, r2, r3
    sub r0, r0, 1
    sub r2, r2, 1
strings_equal_loop:
    ld r6, r0
    ld r7, r2
    cmp r6, r7
    jne strings_equal_false
    sub r0, r0, 1
    sub r2, r2, 1
    sub r4, r4, 1
    cmp r4, 0
    jne strings_equal_loop
strings_equal_true:
    mov r0, 1
    jmp strings_equal_end
strings_equal_false:
    mov r0, 0
    jmp strings_equal_end
strings_equal_end:
    cmp r0, 1
    jne strings_equal_are_not_matching
    jeq strings_equal_are_matching
strings_equal_are_matching:
    mov r0, 1
    ret
strings_equal_are_not_matching:
    mov r0, 0
    ret

strings_to_lower:
    cast r0, u32
    cast r1, u32
    cast r2, u32
    mov r2, r0
    add r2, r2, r1
strings_to_lower_loop:
    ld r3, r0
    cast r3, u32
    cmp r3, 65
    jlt strings_to_lower_loop_continue
    cmp r3, 90
    jgt strings_to_lower_loop_continue
    add r3, r3, 32
    str r0, r3
strings_to_lower_loop_continue:
    inc r0
    cmp r0, r2
    jeq strings_to_lower_end
    jmp strings_to_lower_loop
strings_to_lower_end:
    ret
    
strings_to_upper:
    cast r0, u32
    cast r1, u32
    cast r2, u32
    mov r2, r0
    add r2, r2, r1
strings_to_upper_loop:
    ld r3, r0
    cast r3, u32
    cmp r3, 97
    jlt strings_to_upper_loop_continue
    cmp r3, 122
    jgt strings_to_upper_loop_continue
    sub r3, r3, 32
    str r0, r3
strings_to_upper_loop_continue:
    inc r0
    cmp r0, r2
    jeq strings_to_upper_end
    jmp strings_to_upper_loop
strings_to_upper_end:
    ret