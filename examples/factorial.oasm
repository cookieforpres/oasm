@entry _start

factorial:
    cmp r0, 1
    jle factorial_end

    mov r1, 1
    mov r2, r0

factorial_loop:
    mul r1, r1, r2
    sub r2, r2, 1
    cmp r2, 0
    jne factorial_loop

factorial_end:
    ret

_start:
    mov sp, 0x0800
    
    mov r0, 10          ; nth
    call factorial

    str 0x00, r1
    mov r0, 0x00
    mov r1, 0x00
    int 10

    mov r3, r0
    add r3, r3, i64(0x00)
    str r3, 10
    add r0, r0, i64(1)
    mov r3, r0
    
    mov r0, 1
    mov r1, r1
    mov r2, r3
    int 2

    halt